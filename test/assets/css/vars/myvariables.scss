$primary: #3797D9 !default;
$secondary: #6c757d !default;
$success: #21BA45 !default;
$danger: #ff0000 !default;
$info: #31CCEC !default;
$warning: #fb8b31 !default;
$accent: #9C27B0 !default;
$dark-page: #333333 !default;
$dark: #333333 !default;
$light: #f8f9fa !default;
$spacer: 16px !default;

$breakpoint-sm: 750px !default;
$breakpoint-xl: 1200px !default;

// $sizes: ('sm': 0, 'sm': ($breakpoint-sm + 1), 'md': ($breakpoint-md + 1), 'lg': ($breakpoint-lg + 1), 'xl': ($breakpoint-xl + 1)) !default;
$breakpoint-sm-min: 0 !default;
$breakpoint-sm-max: $breakpoint-xl !default;
$breakpoint-xl-min: $breakpoint-xl+1 !default;
$breakpoint-xl-max: 9999px !default;

@function px2rem($px-values,$device:mobile,$support-for-ie:false) {
  $baseline-px:null;
  @if ($device == mobile) {
    $baseline-px: 75px;
  }
  @if ($device == pc) {
    $baseline-px: 18px;
  }
  //Conver the baseline into rems
  $baseline-rem: $baseline-px / 1rem * 1;
  //Print the first line in pixel values
  @if $support-for-ie {
    @return if($px-values != 0,  $px-values / $baseline-rem, 0);
  }
  //if there is only one (numeric) value, return the property/value line for it.
  @if type-of($px-values) == "number" {
    @return if($px-values != 0,  $px-values / $baseline-rem, 0);
  } @else {
    //Create an empty list that we can dump values into
    $rem-values: ();
    @each $value in $px-values {
      // If the value is zero or not a number, return it
      @if $value == 0 or type-of($value) != "number" {
        $rem-values: append($rem-values, $value / $baseline-rem);
      }
    }
    // Return the property and its list of converted values
    @return $rem-values;
  }
}

@mixin px2rem($property,$px-values,$device:mobile,$isImportant:false,$support-for-ie:false) {
  #{$property}: px2rem($px-values,$device,$support-for-ie) if($isImportant, !important, null);
}
